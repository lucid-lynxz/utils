plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.github.dcendents.android-maven'
//    id 'com.novoda.bintray-release'
}

group = 'com.github.lucid-lynxz' // 指定group:com.github.<用户名>

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 16
        versionName "0.1.17"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    testImplementation(test.junit)
    testImplementation(libs.kotlinLib)

    androidTestImplementation(libs.kotlinLib)
    androidTestImplementation(test.junitExtX)
    androidTestImplementation(test.espressoX)
    androidTestImplementation(test.testRunnerX)

    compileOnly(libs.kotlinLib)
    implementation(libs.appcompatX)

//    implementation(libs.annotationX)
//    implementation(libs.googleMaterial)
//    implementation(libs.constraintLayoutX)

    // 创建抽象类的实现类,本库暂不集成,由用户自行创建
    // implementation(libs.javassist)
}

//publish {
//    // 读取配置的信息
//    Properties properties = new Properties()
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//    bintrayUser = properties.getProperty('user') // 用户名
//    bintrayKey = properties.getProperty('apikey') // bintray 的 apikey ,可以在通过账户信息的 edit profile 中查询得到
//    dryRun = false
//
//    userOrg = 'lucid-lynxz'
//    groupId = 'org.lynxz.utils' // 填包名就好
//    artifactId = 'androidutils'  // bintray中对应的packagename,大小写敏感
//    uploadName = 'androidutils' // rbintray中对应的maven product名称,默认为artifactId, 大小写敏感
//    publishVersion = '0.0.1' // 发布版本号
//    desc = 'init'
//    website = 'https://github.com/lucid-lynxz/PayWrapper.git'
//}

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}